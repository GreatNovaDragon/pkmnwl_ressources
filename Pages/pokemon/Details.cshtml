@page
@model DetailsModel

@{
    ViewData["Title"] = "";
    var title = Model.Pokemon.Name_DE;

    if (title == null)
    {
        title += Model.Pokemon.Name;
    }

    if (!Model.Pokemon.Form.IsNullOrEmpty())
    {
        title += $" ({Model.Pokemon.Form})";
    }


    ViewData["Title"] = title;

    string headercolor;
    if (Model.Pokemon.Type2 != null)
    {
        headercolor = $"linear-gradient(135deg, {Helpers.TypeToColor(Model.Pokemon.Type1)} 0%, {Helpers.TypeToColor(Model.Pokemon.Type2)} 100%); ";
    }
    else
    {
        headercolor = Helpers.TypeToColor(Model.Pokemon.Type1);
    }

    ViewData["Type1"] = Model.Pokemon.Type1.ID;
    ViewData["Type2"] = Model.Pokemon.Type2?.ID;

    ViewData["HeaderColor"] = headercolor;
}


<div class="w3-cell-row">
    <div class="w3-container w3-quarter w3-cell">
        <img src="@Html.Raw(Model.Pokemon.ImageLink)" class="w3-image"/>
    </div>
    <div class="w3-container w3-quarter w3-cell">
        <h2>Fähigkeiten</h2>
        @foreach (var a in Model.Pokemon.Abilities)
        {
            <h3>@Html.Raw($"{a.Name_DE}")</h3>
            @Html.Raw(Markdown.Parse(a.Effect))
        }
    </div>

    <div class="w3-container w3-quarter w3-cell">
        <canvas id="myChart"></canvas>


        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
           const ctx = document.getElementById('myChart');
         
           new Chart(ctx, {
             type: 'bar',
             data: {
               labels: ['Gesundheit @Html.Raw(Model.Pokemon.HEALTH)/50', 'Angriff @Html.Raw(Model.Pokemon.ATK)/25', 'Verteidigung @Html.Raw(Model.Pokemon.DEF)/25', 'Spezial-Angriff @Html.Raw(Model.Pokemon.SP_ATK)/25' , 'Spezial-Verteidigung @Html.Raw(Model.Pokemon.SP_DEF)/25', 'Initiative @Html.Raw(Model.Pokemon.SPEED)/25'],
               datasets: [{
                 data: [@Html.Raw(Model.Pokemon.HEALTH / 2), @Html.Raw(Model.Pokemon.ATK), @Html.Raw(Model.Pokemon.DEF), @Html.Raw(Model.Pokemon.SP_ATK), @Html.Raw(Model.Pokemon.SP_DEF), @Html.Raw(Model.Pokemon.SPEED)],
                 borderWidth: 1,
                 backgroundColor: [
                        'rgb(253,0,0)',
                        'rgb(238,127,48)',
                        'rgb(246,207,48)',
                        'rgb(104,143,238)',
                        'rgb(119,199,80)',
                        'rgb(246,88,135)',
                 ],
               }]
             },
             options: {
                 indexAxis: 'y', 
                 plugins: { legend: {display: false}},
               scales: {
                 x: {
                   min: 0,
                   max: 25,
                   pointLabels: {
                       font: {size: 15}
                   }
                 }
               }
             }
           });
         </script>

    </div>

    <div class="w3-container w3-quarter">
        @if (Model.DamageMultiplier.Where(v => v.Item2 == 0).Count() != 0)
        {
            <div>
                <p>Erhält Null Schaden von</p>
                @foreach (var v in Model.DamageMultiplier.Where(v => v.Item2 == 0))
                {
                    <img src="/icons/type/normal/DE/SV/@Html.Raw($"{v.Item1.ID}.png")"/>
                }
            </div>
        }
        @if (Model.DamageMultiplier.Where(v => v.Item2 == 25).Count() != 0)
        {
            <div>
                <p>Erhält 0.25x Schaden von</p>
                @foreach (var v in Model.DamageMultiplier.Where(v => v.Item2 == 25))
                {
                    <img src="/icons/type/normal/DE/SV/@Html.Raw($"{v.Item1.ID}.png")"/>
                }
            </div>
        }
        @if (Model.DamageMultiplier.Where(v => v.Item2 == 50).Count() != 0)
        {
            <div>
                <p>Erhält 0.5x Schaden von</p>
                @foreach (var v in Model.DamageMultiplier.Where(v => v.Item2 == 50))
                {
                    <img src="/icons/type/normal/DE/SV/@Html.Raw($"{v.Item1.ID}.png")"/>
                }
            </div>
        }
        @if (Model.DamageMultiplier.Where(v => v.Item2 == 200).Count() != 0)
        {
            <div>
                <p>Erhält 2x Schaden von</p>
                @foreach (var v in Model.DamageMultiplier.Where(v => v.Item2 == 200))
                {
                    <img src="/icons/type/normal/DE/SV/@Html.Raw($"{v.Item1.ID}.png")"/>
                }
            </div>
        }
        @if (Model.DamageMultiplier.Where(v => v.Item2 == 400).Count() != 0)
        {
            <div>
                <p>Erhält 4x Schaden von</p>
                @foreach (var v in Model.DamageMultiplier.Where(v => v.Item2 == 400))
                {
                    <img src="/icons/type/normal/DE/SV/@Html.Raw($"{v.Item1.ID}.png")"/>
                }
            </div>
        }

    </div>


</div>


<h2>Erlernbare Angriffe</h2>


<div class="w3-row-padding">
    <a href="javascript:void(0)" onclick="openCity(event, 'LevelUp');">
        <div class="w3-col tablink w3-bottombar w3-hover-light-grey   w3-border-red" style="width:20%">Level Up</div>
    </a>
    <a href="javascript:void(0)" onclick="openCity(event, 'TM');">
        <div class=" w3-col tablink w3-bottombar w3-hover-light-grey " style="width:20%">TM</div>
    </a>
    <a href="javascript:void(0)" onclick="openCity(event, 'Tutor');">
        <div class="w3-col tablink w3-bottombar w3-hover-light-grey " style="width:20%">Tutor</div>
    </a>
    <a href="javascript:void(0)" onclick="openCity(event, 'Egg');">
        <div class="w3-col tablink w3-bottombar w3-hover-light-grey" style="width:20%">Ei</div>
    </a>
</div>


<div id="LevelUp" class="w3-container city" style=" display: flex; flex-wrap: wrap ;  justify-content: space-evenly">
    @foreach (var move in Model.Learnsets.Where(e => e.how == "level-up").OrderBy(e => e.level))
    {
        @Html.Partial("moves/move", move)
    }
</div>


<div id="TM" class="w3-container city" style="display:none; flex-wrap: wrap ; flex:  1 1 0px; justify-content: space-around">
    @foreach (var move in Model.Learnsets.Where(e => e.how == "machine"))
    {
        @Html.Partial("moves/move", move)
    }
</div>
<div id="Tutor" class="w3-container city" style="display:none; flex-wrap: wrap ; flex:  1 1 0px; justify-content: space-around">

    @foreach (var move in Model.Learnsets.Where(e => e.how == "tutor").OrderBy(m => m.move.Name_DE))
    {
        @Html.Partial("moves/move", move)
    }
</div>
<div id="Egg" class="w3-container city" style="display:none; flex-wrap: wrap ; flex:  1 1 0px; justify-content: space-around">

    @foreach (var move in Model.Learnsets.Where(e => e.how == "egg").OrderBy(m => m.move.Name_DE))
    {
        @Html.Partial("moves/move", move)
    }
</div>

<script>
function openCity(evt, cityName) {
  var i, x, tablinks;
  x = document.getElementsByClassName("city");
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablink");
  for (i = 0; i < x.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" w3-border-red", "");
  }
  document.getElementById(cityName).style.display = "flex";
  evt.currentTarget.firstElementChild.className += " w3-border-red";
}
</script>

<a asp-page="./Edit" asp-route-id="@Model.Pokemon?.ID">Edit</a> |
<a asp - page="./Index"> Back to List</a >